<?php

class DnaUnitTests extends DrupalUnitTestCase {

  public static function getInfo() {
    return array(
      'name' => 'DNA unit test',
      'description' => 'Tests that dna.module returns a mirror of the input.',
      'group' => 'Epicodus code review',
    );
  }

  public function testDna() {
    //test description
    $description = 'A lowercase input returns an uppercase output';
    //arrange
    $input = 'a';
    //act
    $pretty_dna_result = pretty_dna($input);
    $result = calculate_dna($pretty_dna_result);
    //assert
    $expected_output = ['T'];
    $this->assertEqual($result, $expected_output, $description);

    //test description
    $description = 'A "T" input returns an "A" output';
    //arrange
    $input = 'T';
    //act
    $pretty_dna_result = pretty_dna($input);
    $result = calculate_dna($pretty_dna_result);
    //assert
    $expected_output = ['A'];
    $this->assertEqual($result, $expected_output, $description);

    //test description
    $description = 'An "A" input returns a "T" output';
    //arrange
    $input = 'A';
    //act
    $pretty_dna_result = pretty_dna($input);
    $result = calculate_dna($pretty_dna_result);
    //assert
    $expected_output = ['T'];
    $this->assertEqual($result, $expected_output, $description);

    //test description
    $description = 'A "C" input returns a "G" output';
    //arrange
    $input = 'C';
    //act
    $pretty_dna_result = pretty_dna($input);
    $result = calculate_dna($pretty_dna_result);
    //assert
    $expected_output = ['G'];
    $this->assertEqual($result, $expected_output, $description);

    //test description
    $description = 'A "G" input returns a "C" output';
    //arrange
    $input = 'G';
    //act
    $pretty_dna_result = pretty_dna($input);
    $result = calculate_dna($pretty_dna_result);
    //assert
    $expected_output = ['C'];
    $this->assertEqual($result, $expected_output, $description);

    //test description
    $description = 'Tests multiple letters. A "GA" input returns a "CT" output';
    //arrange
    $input = 'GA';
    //act
    $pretty_dna_result = pretty_dna($input);
    $result = calculate_dna($pretty_dna_result);
    //assert
    $expected_output = ['C','T'];
    $this->assertEqual($result, $expected_output, $description);

    //test description
    $description = 'Tests that spaces are removed. A "G A" input returns a "CT" output';
    //arrange
    $input = 'G A';
    //act
    $pretty_dna_result = pretty_dna($input);
    $result = calculate_dna($pretty_dna_result);
    //assert
    $expected_output = ['C','','T'];
    $this->assertEqual($result, $expected_output, $description);

  }
}

class DnaFunctionalTests extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => 'DNA functional test',
      'description' => 'Tests for the interface of the DNA module.',
      'group' => 'Epicodus code review',
    );
  }

  public function setUp() {
    parent::setUp(array('dna'));
  }

  public function testDnaNavigation() {
    $this->drupalGet('dna');
    $this->assertText('Double Helix Mirror', 'Success!');
  }

  public function testDnaSubmit() {
    $edit = array();
    $edit['dna_first_half'] = "A";
    $this->drupalPost('dna', $edit, t('Calculate DNA'));
    $this->assertText('The results are in:', 'Success!');
  }
}
